// Code generated by MockGen. DO NOT EDIT.
// Source: C:/Users/РОМАН/GolandProjects/msg-bakend/internal/services/user/user_interface.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "github.com/golang/mock/gomock"
)

// MockUserServiceInterface is a mock of UserServiceInterface interface.
type MockUserServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockUserServiceInterfaceMockRecorder
}

// MockUserServiceInterfaceMockRecorder is the mock recorder for MockUserServiceInterface.
type MockUserServiceInterfaceMockRecorder struct {
	mock *MockUserServiceInterface
}

// NewMockUserServiceInterface creates a new mock instance.
func NewMockUserServiceInterface(ctrl *gomock.Controller) *MockUserServiceInterface {
	mock := &MockUserServiceInterface{ctrl: ctrl}
	mock.recorder = &MockUserServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserServiceInterface) EXPECT() *MockUserServiceInterfaceMockRecorder {
	return m.recorder
}

// CheckUserByUsername mocks base method.
func (m *MockUserServiceInterface) CheckUserByUsername(c *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "CheckUserByUsername", c)
}

// CheckUserByUsername indicates an expected call of CheckUserByUsername.
func (mr *MockUserServiceInterfaceMockRecorder) CheckUserByUsername(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckUserByUsername", reflect.TypeOf((*MockUserServiceInterface)(nil).CheckUserByUsername), c)
}

// GetUserProfile mocks base method.
func (m *MockUserServiceInterface) GetUserProfile(c *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "GetUserProfile", c)
}

// GetUserProfile indicates an expected call of GetUserProfile.
func (mr *MockUserServiceInterfaceMockRecorder) GetUserProfile(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserProfile", reflect.TypeOf((*MockUserServiceInterface)(nil).GetUserProfile), c)
}

// RegisterUser mocks base method.
func (m *MockUserServiceInterface) RegisterUser(c *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "RegisterUser", c)
}

// RegisterUser indicates an expected call of RegisterUser.
func (mr *MockUserServiceInterfaceMockRecorder) RegisterUser(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RegisterUser", reflect.TypeOf((*MockUserServiceInterface)(nil).RegisterUser), c)
}

// UpdateUserProfile mocks base method.
func (m *MockUserServiceInterface) UpdateUserProfile(c *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "UpdateUserProfile", c)
}

// UpdateUserProfile indicates an expected call of UpdateUserProfile.
func (mr *MockUserServiceInterfaceMockRecorder) UpdateUserProfile(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateUserProfile", reflect.TypeOf((*MockUserServiceInterface)(nil).UpdateUserProfile), c)
}
